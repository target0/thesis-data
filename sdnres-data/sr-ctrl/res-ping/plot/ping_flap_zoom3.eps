%!PS-Adobe-2.0
%%Title: ping_flap_zoom3.eps
%%Creator: gnuplot 5.0 patchlevel 1 (Gentoo revision r1)
%%CreationDate: Wed Jun  7 17:06:20 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -63 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ping_flap_zoom3.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 1 (Gentoo revision r1))
  /Author (target0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  7 17:06:20 2017)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 190 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
817 608 M
63 0 V
5977 0 R
-63 0 V
stroke
703 608 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 917 M
63 0 V
5977 0 R
-63 0 V
stroke
703 917 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 2)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 1226 M
63 0 V
5977 0 R
-63 0 V
stroke
703 1226 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 4)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 1535 M
63 0 V
5977 0 R
-63 0 V
stroke
703 1535 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 6)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 1844 M
63 0 V
5977 0 R
-63 0 V
stroke
703 1844 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 8)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 2152 M
63 0 V
5977 0 R
-63 0 V
stroke
703 2152 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 10)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 2461 M
63 0 V
5977 0 R
-63 0 V
stroke
703 2461 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 12)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 2770 M
63 0 V
5977 0 R
-63 0 V
stroke
703 2770 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 14)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 3079 M
63 0 V
5977 0 R
-63 0 V
stroke
703 3079 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 16)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 3388 M
63 0 V
5977 0 R
-63 0 V
stroke
703 3388 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 18)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 3697 M
63 0 V
5977 0 R
-63 0 V
stroke
703 3697 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 20)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 4006 M
63 0 V
5977 0 R
-63 0 V
stroke
703 4006 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 22)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 4315 M
63 0 V
5977 0 R
-63 0 V
stroke
703 4315 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 24)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 608 M
0 63 V
0 3798 R
0 -63 V
stroke
817 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1392 608 M
0 63 V
0 3798 R
0 -63 V
stroke
1392 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0.2)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1967 608 M
0 63 V
0 3798 R
0 -63 V
stroke
1967 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0.4)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2543 608 M
0 63 V
0 3798 R
0 -63 V
stroke
2543 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0.6)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3118 608 M
0 63 V
0 3798 R
0 -63 V
stroke
3118 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0.8)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3693 608 M
0 63 V
0 3798 R
0 -63 V
stroke
3693 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 1)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4268 608 M
0 63 V
0 3798 R
0 -63 V
stroke
4268 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 1.2)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4844 608 M
0 63 V
0 3798 R
0 -63 V
stroke
4844 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 1.4)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5419 608 M
0 63 V
0 3798 R
0 -63 V
stroke
5419 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 1.6)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5994 608 M
0 63 V
0 3798 R
0 -63 V
stroke
5994 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 1.8)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6569 608 M
0 63 V
0 3798 R
0 -63 V
stroke
6569 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 2)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
817 4469 N
817 608 L
6040 0 V
0 3861 V
-6040 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
152 2538 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 190.0 0.0 true true 0 (Round-trip time \(milliseconds\))]
] -63.3 MCshow
grestore
LTb
LCb setrgbcolor
3837 133 M
[ [(Helvetica) 190.0 0.0 true true 0 (Time \(seconds\))]
] -63.3 MCshow
LTb
LCb setrgbcolor
3837 4754 M
[ [(Helvetica) 190.0 0.0 true true 0 (Observed ping round-trip time)]
] -63.3 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C LCb setrgbcolor
5996 4311 M
[ [(Helvetica) 190.0 0.0 true true 0 (RTT)]
] -63.3 MRshow
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C 6110 4311 M
519 0 V
846 1969 M
29 0 V
28 -2 V
29 0 V
29 -1 V
29 3 V
28 10 V
29 -15 V
29 775 V
29 31 V
28 788 V
29 -16 V
29 0 V
29 31 V
28 0 V
29 16 V
29 -927 V
29 -31 V
28 0 V
29 -15 V
29 0 V
29 0 V
29 15 V
28 16 V
29 30 V
29 -30 V
29 -31 V
28 0 V
29 31 V
29 0 V
29 -31 V
28 15 V
29 0 V
29 0 V
29 0 V
28 16 V
29 -31 V
29 15 V
29 16 V
28 0 V
29 -16 V
29 0 V
29 0 V
29 0 V
28 31 V
29 -15 V
29 15 V
29 0 V
28 -355 V
29 -331 V
29 0 V
29 8 V
28 -9 V
29 -5 V
29 -4 V
29 4 V
28 34 V
29 -35 V
29 21 V
29 -14 V
28 2 V
29 9 V
29 19 V
29 -27 V
29 -3 V
28 -9 V
29 -6 V
29 6 V
29 8 V
28 -33 V
29 39 V
29 -11 V
29 -1 V
28 -3 V
29 3 V
29 0 V
29 0 V
28 -2 V
29 -1 V
29 -4 V
29 19 V
28 11 V
29 52 V
29 711 V
29 0 V
29 15 V
28 741 V
29 0 V
29 31 V
29 16 V
28 -16 V
29 31 V
29 -896 V
29 -46 V
28 0 V
29 -15 V
29 31 V
29 -16 V
28 31 V
29 -15 V
29 -16 V
29 -15 V
28 15 V
stroke 3779 2631 M
29 0 V
29 0 V
29 0 V
29 -15 V
28 15 V
29 16 V
29 -16 V
29 0 V
28 31 V
29 0 V
29 -31 V
29 16 V
28 -16 V
29 46 V
29 -46 V
29 16 V
28 15 V
29 -15 V
29 15 V
29 31 V
28 -371 V
29 -15 V
29 -295 V
29 -53 V
29 -4 V
28 0 V
29 9 V
29 -9 V
29 21 V
28 -10 V
29 -5 V
29 5 V
29 35 V
28 -11 V
29 5 V
29 -19 V
29 0 V
28 13 V
29 -17 V
29 9 V
29 -8 V
28 59 V
29 -51 V
29 -11 V
29 0 V
29 -3 V
28 -9 V
29 -3 V
29 14 V
29 -2 V
28 -8 V
29 -6 V
29 0 V
29 0 V
28 2 V
29 34 V
29 -20 V
29 786 V
28 -16 V
29 803 V
29 0 V
29 47 V
28 -16 V
29 47 V
29 -78 V
29 -803 V
29 -92 V
28 -16 V
29 0 V
29 -15 V
29 31 V
28 0 V
29 -31 V
29 15 V
29 16 V
28 -16 V
29 0 V
29 -15 V
29 31 V
28 0 V
29 -16 V
29 0 V
29 16 V
28 -16 V
29 31 V
29 -31 V
29 31 V
29 -15 V
28 15 V
29 15 V
29 16 V
29 -31 V
28 -15 V
29 15 V
29 -31 V
29 -324 V
28 15 V
29 -343 V
29 -17 V
29 4 V
28 0 V
29 0 V
29 10 V
29 -6 V
stroke 6771 1970 M
28 3 V
29 -1 V
846 1969 Pls
875 1969 Pls
903 1967 Pls
932 1967 Pls
961 1966 Pls
990 1969 Pls
1018 1979 Pls
1047 1964 Pls
1076 2739 Pls
1105 2770 Pls
1133 3558 Pls
1162 3542 Pls
1191 3542 Pls
1220 3573 Pls
1248 3573 Pls
1277 3589 Pls
1306 2662 Pls
1335 2631 Pls
1363 2631 Pls
1392 2616 Pls
1421 2616 Pls
1450 2616 Pls
1479 2631 Pls
1507 2647 Pls
1536 2677 Pls
1565 2647 Pls
1594 2616 Pls
1622 2616 Pls
1651 2647 Pls
1680 2647 Pls
1709 2616 Pls
1737 2631 Pls
1766 2631 Pls
1795 2631 Pls
1824 2631 Pls
1852 2647 Pls
1881 2616 Pls
1910 2631 Pls
1939 2647 Pls
1967 2647 Pls
1996 2631 Pls
2025 2631 Pls
2054 2631 Pls
2083 2631 Pls
2111 2662 Pls
2140 2647 Pls
2169 2662 Pls
2198 2662 Pls
2226 2307 Pls
2255 1976 Pls
2284 1976 Pls
2313 1984 Pls
2341 1975 Pls
2370 1970 Pls
2399 1966 Pls
2428 1970 Pls
2456 2004 Pls
2485 1969 Pls
2514 1990 Pls
2543 1976 Pls
2571 1978 Pls
2600 1987 Pls
2629 2006 Pls
2658 1979 Pls
2687 1976 Pls
2715 1967 Pls
2744 1961 Pls
2773 1967 Pls
2802 1975 Pls
2830 1942 Pls
2859 1981 Pls
2888 1970 Pls
2917 1969 Pls
2945 1966 Pls
2974 1969 Pls
3003 1969 Pls
3032 1969 Pls
3060 1967 Pls
3089 1966 Pls
3118 1962 Pls
3147 1981 Pls
3175 1992 Pls
3204 2044 Pls
3233 2755 Pls
3262 2755 Pls
3291 2770 Pls
3319 3511 Pls
3348 3511 Pls
3377 3542 Pls
3406 3558 Pls
3434 3542 Pls
3463 3573 Pls
3492 2677 Pls
3521 2631 Pls
3549 2631 Pls
3578 2616 Pls
3607 2647 Pls
3636 2631 Pls
3664 2662 Pls
3693 2647 Pls
3722 2631 Pls
3751 2616 Pls
3779 2631 Pls
3808 2631 Pls
3837 2631 Pls
3866 2631 Pls
3895 2616 Pls
3923 2631 Pls
3952 2647 Pls
3981 2631 Pls
4010 2631 Pls
4038 2662 Pls
4067 2662 Pls
4096 2631 Pls
4125 2647 Pls
4153 2631 Pls
4182 2677 Pls
4211 2631 Pls
4240 2647 Pls
4268 2662 Pls
4297 2647 Pls
4326 2662 Pls
4355 2693 Pls
4383 2322 Pls
4412 2307 Pls
4441 2012 Pls
4470 1959 Pls
4499 1955 Pls
4527 1955 Pls
4556 1964 Pls
4585 1955 Pls
4614 1976 Pls
4642 1966 Pls
4671 1961 Pls
4700 1966 Pls
4729 2001 Pls
4757 1990 Pls
4786 1995 Pls
4815 1976 Pls
4844 1976 Pls
4872 1989 Pls
4901 1972 Pls
4930 1981 Pls
4959 1973 Pls
4987 2032 Pls
5016 1981 Pls
5045 1970 Pls
5074 1970 Pls
5103 1967 Pls
5131 1958 Pls
5160 1955 Pls
5189 1969 Pls
5218 1967 Pls
5246 1959 Pls
5275 1953 Pls
5304 1953 Pls
5333 1953 Pls
5361 1955 Pls
5390 1989 Pls
5419 1969 Pls
5448 2755 Pls
5476 2739 Pls
5505 3542 Pls
5534 3542 Pls
5563 3589 Pls
5591 3573 Pls
5620 3620 Pls
5649 3542 Pls
5678 2739 Pls
5707 2647 Pls
5735 2631 Pls
5764 2631 Pls
5793 2616 Pls
5822 2647 Pls
5850 2647 Pls
5879 2616 Pls
5908 2631 Pls
5937 2647 Pls
5965 2631 Pls
5994 2631 Pls
6023 2616 Pls
6052 2647 Pls
6080 2647 Pls
6109 2631 Pls
6138 2631 Pls
6167 2647 Pls
6195 2631 Pls
6224 2662 Pls
6253 2631 Pls
6282 2662 Pls
6311 2647 Pls
6339 2662 Pls
6368 2677 Pls
6397 2693 Pls
6426 2662 Pls
6454 2647 Pls
6483 2662 Pls
6512 2631 Pls
6541 2307 Pls
6569 2322 Pls
6598 1979 Pls
6627 1962 Pls
6656 1966 Pls
6684 1966 Pls
6713 1966 Pls
6742 1976 Pls
6771 1970 Pls
6799 1973 Pls
6828 1972 Pls
6369 4311 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
817 4469 N
817 608 L
6040 0 V
0 3861 V
-6040 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
