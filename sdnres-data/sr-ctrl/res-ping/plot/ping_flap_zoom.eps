%!PS-Adobe-2.0
%%Title: ping_flap_zoom.eps
%%Creator: gnuplot 5.0 patchlevel 1 (Gentoo revision r1)
%%CreationDate: Wed Jun  7 15:36:37 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -63 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ping_flap_zoom.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 1 (Gentoo revision r1))
  /Author (target0)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  7 15:36:37 2017)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 190 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
/Helvetica findfont 190 scalefont setfont
/vshift -63 def
1.000 UL
LTb
LCb setrgbcolor
817 608 M
63 0 V
5977 0 R
-63 0 V
stroke
703 608 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 8)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 1037 M
63 0 V
5977 0 R
-63 0 V
stroke
703 1037 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 10)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 1466 M
63 0 V
5977 0 R
-63 0 V
stroke
703 1466 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 12)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 1895 M
63 0 V
5977 0 R
-63 0 V
stroke
703 1895 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 14)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 2324 M
63 0 V
5977 0 R
-63 0 V
stroke
703 2324 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 16)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 2753 M
63 0 V
5977 0 R
-63 0 V
stroke
703 2753 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 18)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 3182 M
63 0 V
5977 0 R
-63 0 V
stroke
703 3182 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 20)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 3611 M
63 0 V
5977 0 R
-63 0 V
stroke
703 3611 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 22)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 4040 M
63 0 V
5977 0 R
-63 0 V
stroke
703 4040 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 24)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 4469 M
63 0 V
5977 0 R
-63 0 V
stroke
703 4469 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 26)]
] -63.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
817 608 M
0 63 V
0 3798 R
0 -63 V
stroke
817 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 0)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1824 608 M
0 63 V
0 3798 R
0 -63 V
stroke
1824 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 50)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2830 608 M
0 63 V
0 3798 R
0 -63 V
stroke
2830 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 100)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3837 608 M
0 63 V
0 3798 R
0 -63 V
stroke
3837 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 150)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4844 608 M
0 63 V
0 3798 R
0 -63 V
stroke
4844 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 200)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5850 608 M
0 63 V
0 3798 R
0 -63 V
stroke
5850 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 250)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6857 608 M
0 63 V
0 3798 R
0 -63 V
stroke
6857 418 M
[ [(Helvetica) 190.0 0.0 true true 0 ( 300)]
] -63.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
817 4469 N
817 608 L
6040 0 V
0 3861 V
-6040 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
152 2538 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 190.0 0.0 true true 0 (Latency \(milliseconds\))]
] -63.3 MCshow
grestore
LTb
LCb setrgbcolor
3837 133 M
[ [(Helvetica) 190.0 0.0 true true 0 (Time)]
] -63.3 MCshow
LTb
LCb setrgbcolor
3837 4754 M
[ [(Helvetica) 190.0 0.0 true true 0 (Observed ping latency)]
] -63.3 MCshow
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C /Helvetica findfont 190 scalefont setfont
LCb setrgbcolor
5996 4311 M
("pingflap_zoom.dat") Rshow
1.000 UP
1.000 UL
LTb
0.00 1.00 0.00 C 6110 4311 M
519 0 V
837 767 M
20 -24 V
20 15 V
21 0 V
20 11 V
20 30 V
20 -45 V
20 -9 V
20 -23 V
20 15 V
20 45 V
21 -20 V
20 -15 V
20 -6 V
20 -4 V
20 4 V
20 -11 V
20 13 V
21 4 V
20 -8 V
20 -7 V
20 -2 V
20 20 V
20 351 V
20 -373 V
20 -11 V
21 3 V
20 53 V
20 198 V
20 -151 V
20 -19 V
20 -17 V
20 -2 V
21 2 V
20 -2 V
20 2 V
20 2 V
20 -4 V
20 2 V
20 0 V
20 2 V
21 -4 V
20 0 V
20 4 V
20 -4 V
20 2 V
20 0 V
20 39 V
21 -39 V
20 -2 V
20 2 V
20 0 V
20 2 V
20 -2 V
20 2 V
20 -2 V
21 4 V
20 -2 V
20 -4 V
20 0 V
20 0 V
20 6 V
20 -6 V
21 0 V
20 2 V
20 -2 V
20 0 V
20 2 V
20 -2 V
20 -30 V
20 500 V
21 -475 V
20 11 V
20 -4 V
20 4 V
20 0 V
20 2 V
20 -25 V
21 -20 V
20 -21 V
20 0 V
20 2 V
20 -2 V
20 11 V
20 36 V
20 -24 V
21 30 V
20 -42 V
20 2 V
20 6 V
20 -4 V
20 0 V
20 -15 V
21 2 V
20 0 V
20 86 V
20 -86 V
20 -2 V
20 2 V
20 36 V
20 -21 V
21 24 V
20 8 V
stroke 2891 773 M
20 4 V
20 5 V
20 -32 V
20 -24 V
20 -6 V
21 40 V
20 20 V
20 -30 V
20 308 V
20 -259 V
20 -11 V
20 2 V
20 -4 V
21 2 V
20 -2 V
20 0 V
20 2 V
20 -2 V
20 0 V
20 2 V
21 -4 V
20 2 V
20 0 V
20 0 V
20 2 V
20 0 V
20 0 V
20 -2 V
21 2 V
20 0 V
20 -6 V
20 4 V
20 2 V
20 -2 V
20 2 V
21 -2 V
20 4 V
20 -2 V
20 -6 V
20 2 V
20 2 V
20 -2 V
20 -15 V
21 -32 V
20 -2 V
20 1074 V
20 65 V
20 1051 V
20 -22 V
20 279 V
21 -150 V
20 -708 V
20 -686 V
20 21 V
20 0 V
20 -21 V
20 922 V
20 -879 V
21 -22 V
20 -43 V
20 22 V
20 0 V
20 21 V
20 0 V
20 0 V
21 -21 V
20 0 V
20 0 V
20 0 V
20 21 V
20 43 V
20 0 V
20 0 V
21 0 V
20 0 V
20 107 V
20 -64 V
20 43 V
20 -129 V
20 22 V
21 0 V
20 772 V
20 -1159 V
20 108 V
20 -607 V
20 -3 V
20 7 V
20 -49 V
21 8 V
20 -26 V
20 -4 V
20 -2 V
20 4 V
20 -8 V
20 109 V
21 -49 V
20 201 V
20 -253 V
20 58 V
20 -45 V
20 -15 V
20 -8 V
20 36 V
21 -26 V
stroke 4985 730 M
20 2 V
20 -2 V
20 24 V
20 26 V
20 30 V
20 2 V
21 -62 V
20 -13 V
20 15 V
20 10 V
20 -4 V
20 30 V
20 -4 V
20 150 V
21 -146 V
20 -26 V
20 1090 V
20 1094 V
20 0 V
20 -21 V
20 171 V
21 1201 V
20 -1372 V
20 0 V
20 -1244 V
20 -65 V
20 22 V
20 0 V
20 21 V
21 0 V
20 0 V
20 0 V
20 0 V
20 0 V
20 0 V
20 -21 V
21 21 V
20 0 V
20 22 V
20 0 V
20 21 V
20 -21 V
20 0 V
20 21 V
21 107 V
20 -150 V
20 43 V
20 236 V
20 -215 V
20 -64 V
20 0 V
21 343 V
20 -343 V
20 365 V
20 -579 V
20 -646 V
20 -13 V
20 -2 V
20 0 V
21 0 V
20 -2 V
20 0 V
20 2 V
837 767 Pls
857 743 Pls
877 758 Pls
898 758 Pls
918 769 Pls
938 799 Pls
958 754 Pls
978 745 Pls
998 722 Pls
1018 737 Pls
1038 782 Pls
1059 762 Pls
1079 747 Pls
1099 741 Pls
1119 737 Pls
1139 741 Pls
1159 730 Pls
1179 743 Pls
1200 747 Pls
1220 739 Pls
1240 732 Pls
1260 730 Pls
1280 750 Pls
1300 1101 Pls
1320 728 Pls
1340 717 Pls
1361 720 Pls
1381 773 Pls
1401 971 Pls
1421 820 Pls
1441 801 Pls
1461 784 Pls
1481 782 Pls
1502 784 Pls
1522 782 Pls
1542 784 Pls
1562 786 Pls
1582 782 Pls
1602 784 Pls
1622 784 Pls
1642 786 Pls
1663 782 Pls
1683 782 Pls
1703 786 Pls
1723 782 Pls
1743 784 Pls
1763 784 Pls
1783 823 Pls
1804 784 Pls
1824 782 Pls
1844 784 Pls
1864 784 Pls
1884 786 Pls
1904 784 Pls
1924 786 Pls
1944 784 Pls
1965 788 Pls
1985 786 Pls
2005 782 Pls
2025 782 Pls
2045 782 Pls
2065 788 Pls
2085 782 Pls
2106 782 Pls
2126 784 Pls
2146 782 Pls
2166 782 Pls
2186 784 Pls
2206 782 Pls
2226 752 Pls
2246 1252 Pls
2267 777 Pls
2287 788 Pls
2307 784 Pls
2327 788 Pls
2347 788 Pls
2367 790 Pls
2387 765 Pls
2408 745 Pls
2428 724 Pls
2448 724 Pls
2468 726 Pls
2488 724 Pls
2508 735 Pls
2528 771 Pls
2548 747 Pls
2569 777 Pls
2589 735 Pls
2609 737 Pls
2629 743 Pls
2649 739 Pls
2669 739 Pls
2689 724 Pls
2710 726 Pls
2730 726 Pls
2750 812 Pls
2770 726 Pls
2790 724 Pls
2810 726 Pls
2830 762 Pls
2850 741 Pls
2871 765 Pls
2891 773 Pls
2911 777 Pls
2931 782 Pls
2951 750 Pls
2971 726 Pls
2991 720 Pls
3012 760 Pls
3032 780 Pls
3052 750 Pls
3072 1058 Pls
3092 799 Pls
3112 788 Pls
3132 790 Pls
3152 786 Pls
3173 788 Pls
3193 786 Pls
3213 786 Pls
3233 788 Pls
3253 786 Pls
3273 786 Pls
3293 788 Pls
3314 784 Pls
3334 786 Pls
3354 786 Pls
3374 786 Pls
3394 788 Pls
3414 788 Pls
3434 788 Pls
3454 786 Pls
3475 788 Pls
3495 788 Pls
3515 782 Pls
3535 786 Pls
3555 788 Pls
3575 786 Pls
3595 788 Pls
3616 786 Pls
3636 790 Pls
3656 788 Pls
3676 782 Pls
3696 784 Pls
3716 786 Pls
3736 784 Pls
3756 769 Pls
3777 737 Pls
3797 735 Pls
3817 1809 Pls
3837 1874 Pls
3857 2925 Pls
3877 2903 Pls
3897 3182 Pls
3918 3032 Pls
3938 2324 Pls
3958 1638 Pls
3978 1659 Pls
3998 1659 Pls
4018 1638 Pls
4038 2560 Pls
4058 1681 Pls
4079 1659 Pls
4099 1616 Pls
4119 1638 Pls
4139 1638 Pls
4159 1659 Pls
4179 1659 Pls
4199 1659 Pls
4220 1638 Pls
4240 1638 Pls
4260 1638 Pls
4280 1638 Pls
4300 1659 Pls
4320 1702 Pls
4340 1702 Pls
4360 1702 Pls
4381 1702 Pls
4401 1702 Pls
4421 1809 Pls
4441 1745 Pls
4461 1788 Pls
4481 1659 Pls
4501 1681 Pls
4522 1681 Pls
4542 2453 Pls
4562 1294 Pls
4582 1402 Pls
4602 795 Pls
4622 792 Pls
4642 799 Pls
4662 750 Pls
4683 758 Pls
4703 732 Pls
4723 728 Pls
4743 726 Pls
4763 730 Pls
4783 722 Pls
4803 831 Pls
4824 782 Pls
4844 983 Pls
4864 730 Pls
4884 788 Pls
4904 743 Pls
4924 728 Pls
4944 720 Pls
4964 756 Pls
4985 730 Pls
5005 732 Pls
5025 730 Pls
5045 754 Pls
5065 780 Pls
5085 810 Pls
5105 812 Pls
5126 750 Pls
5146 737 Pls
5166 752 Pls
5186 762 Pls
5206 758 Pls
5226 788 Pls
5246 784 Pls
5266 934 Pls
5287 788 Pls
5307 762 Pls
5327 1852 Pls
5347 2946 Pls
5367 2946 Pls
5387 2925 Pls
5407 3096 Pls
5428 4297 Pls
5448 2925 Pls
5468 2925 Pls
5488 1681 Pls
5508 1616 Pls
5528 1638 Pls
5548 1638 Pls
5568 1659 Pls
5589 1659 Pls
5609 1659 Pls
5629 1659 Pls
5649 1659 Pls
5669 1659 Pls
5689 1659 Pls
5709 1638 Pls
5730 1659 Pls
5750 1659 Pls
5770 1681 Pls
5790 1681 Pls
5810 1702 Pls
5830 1681 Pls
5850 1681 Pls
5870 1702 Pls
5891 1809 Pls
5911 1659 Pls
5931 1702 Pls
5951 1938 Pls
5971 1723 Pls
5991 1659 Pls
6011 1659 Pls
6032 2002 Pls
6052 1659 Pls
6072 2024 Pls
6092 1445 Pls
6112 799 Pls
6132 786 Pls
6152 784 Pls
6172 784 Pls
6193 784 Pls
6213 782 Pls
6233 782 Pls
6253 784 Pls
6369 4311 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
817 4469 N
817 608 L
6040 0 V
0 3861 V
-6040 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
